async def wait_for_context_blocking():
    """Return the first context text available.
    Accept either ('CTX:', text) or any plain str (e.g., PTT result) as context.
    """
    # Drain queue first
    while True:
        try:
            item = interrupt_q.get_nowait()
            if isinstance(item, tuple) and item[0] == "CTX:":
                return item[1]
            if isinstance(item, str):          # <— NEW: accept PTT/typed as context
                return item
        except asyncio.QueueEmpty:
            break
    # Wait for next
    while True:
        item = await interrupt_q.get()
        if isinstance(item, tuple) and item[0] == "CTX:":
            return item[1]
        if isinstance(item, str):              # <— NEW: accept PTT/typed as context
            return item
